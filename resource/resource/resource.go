// Code generated by goctl. DO NOT EDIT!
// Source: resource.proto

package resource

import (
	"context"

	"gtw/resource/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	CreateOssReq   = pb.CreateOssReq
	DeleteOssReq   = pb.DeleteOssReq
	Empty          = pb.Empty
	File           = pb.File
	GetFileReq     = pb.GetFileReq
	GetFileResp    = pb.GetFileResp
	MakeBucketReq  = pb.MakeBucketReq
	Oss            = pb.Oss
	OssDetailReq   = pb.OssDetailReq
	OssDetailResp  = pb.OssDetailResp
	OssFile        = pb.OssFile
	OssListReq     = pb.OssListReq
	OssListResp    = pb.OssListResp
	PingResp       = pb.PingResp
	PutFileReq     = pb.PutFileReq
	PutFileResp    = pb.PutFileResp
	RemoveFileReq  = pb.RemoveFileReq
	RemoveFilesReq = pb.RemoveFilesReq
	StatFileReq    = pb.StatFileReq
	StatFileResp   = pb.StatFileResp
	UpdateOssReq   = pb.UpdateOssReq

	Resource interface {
		Ping(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*PingResp, error)
		OssDetail(ctx context.Context, in *OssDetailReq, opts ...grpc.CallOption) (*OssDetailResp, error)
		OssList(ctx context.Context, in *OssListReq, opts ...grpc.CallOption) (*OssListResp, error)
		CreateOss(ctx context.Context, in *CreateOssReq, opts ...grpc.CallOption) (*Empty, error)
		UpdateOss(ctx context.Context, in *UpdateOssReq, opts ...grpc.CallOption) (*Empty, error)
		DeleteOss(ctx context.Context, in *DeleteOssReq, opts ...grpc.CallOption) (*Empty, error)
		MakeBucket(ctx context.Context, in *MakeBucketReq, opts ...grpc.CallOption) (*Empty, error)
		StatFile(ctx context.Context, in *StatFileReq, opts ...grpc.CallOption) (*StatFileResp, error)
		PutFile(ctx context.Context, in *PutFileReq, opts ...grpc.CallOption) (*PutFileResp, error)
		GetFile(ctx context.Context, in *GetFileReq, opts ...grpc.CallOption) (*GetFileResp, error)
		RemoveFile(ctx context.Context, in *RemoveFileReq, opts ...grpc.CallOption) (*Empty, error)
		RemoveFiles(ctx context.Context, in *RemoveFilesReq, opts ...grpc.CallOption) (*Empty, error)
	}

	defaultResource struct {
		cli zrpc.Client
	}
)

func NewResource(cli zrpc.Client) Resource {
	return &defaultResource{
		cli: cli,
	}
}

func (m *defaultResource) Ping(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*PingResp, error) {
	client := pb.NewResourceClient(m.cli.Conn())
	return client.Ping(ctx, in, opts...)
}

func (m *defaultResource) OssDetail(ctx context.Context, in *OssDetailReq, opts ...grpc.CallOption) (*OssDetailResp, error) {
	client := pb.NewResourceClient(m.cli.Conn())
	return client.OssDetail(ctx, in, opts...)
}

func (m *defaultResource) OssList(ctx context.Context, in *OssListReq, opts ...grpc.CallOption) (*OssListResp, error) {
	client := pb.NewResourceClient(m.cli.Conn())
	return client.OssList(ctx, in, opts...)
}

func (m *defaultResource) CreateOss(ctx context.Context, in *CreateOssReq, opts ...grpc.CallOption) (*Empty, error) {
	client := pb.NewResourceClient(m.cli.Conn())
	return client.CreateOss(ctx, in, opts...)
}

func (m *defaultResource) UpdateOss(ctx context.Context, in *UpdateOssReq, opts ...grpc.CallOption) (*Empty, error) {
	client := pb.NewResourceClient(m.cli.Conn())
	return client.UpdateOss(ctx, in, opts...)
}

func (m *defaultResource) DeleteOss(ctx context.Context, in *DeleteOssReq, opts ...grpc.CallOption) (*Empty, error) {
	client := pb.NewResourceClient(m.cli.Conn())
	return client.DeleteOss(ctx, in, opts...)
}

func (m *defaultResource) MakeBucket(ctx context.Context, in *MakeBucketReq, opts ...grpc.CallOption) (*Empty, error) {
	client := pb.NewResourceClient(m.cli.Conn())
	return client.MakeBucket(ctx, in, opts...)
}

func (m *defaultResource) StatFile(ctx context.Context, in *StatFileReq, opts ...grpc.CallOption) (*StatFileResp, error) {
	client := pb.NewResourceClient(m.cli.Conn())
	return client.StatFile(ctx, in, opts...)
}

func (m *defaultResource) PutFile(ctx context.Context, in *PutFileReq, opts ...grpc.CallOption) (*PutFileResp, error) {
	client := pb.NewResourceClient(m.cli.Conn())
	return client.PutFile(ctx, in, opts...)
}

func (m *defaultResource) GetFile(ctx context.Context, in *GetFileReq, opts ...grpc.CallOption) (*GetFileResp, error) {
	client := pb.NewResourceClient(m.cli.Conn())
	return client.GetFile(ctx, in, opts...)
}

func (m *defaultResource) RemoveFile(ctx context.Context, in *RemoveFileReq, opts ...grpc.CallOption) (*Empty, error) {
	client := pb.NewResourceClient(m.cli.Conn())
	return client.RemoveFile(ctx, in, opts...)
}

func (m *defaultResource) RemoveFiles(ctx context.Context, in *RemoveFilesReq, opts ...grpc.CallOption) (*Empty, error) {
	client := pb.NewResourceClient(m.cli.Conn())
	return client.RemoveFiles(ctx, in, opts...)
}
