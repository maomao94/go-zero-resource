// Code generated by goctl. DO NOT EDIT!
// Source: resource.proto

package resource

import (
	"context"

	"gtw/resource/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Empty         = pb.Empty
	Oss           = pb.Oss
	OssDetailReq  = pb.OssDetailReq
	OssDetailResp = pb.OssDetailResp
	OssListReq    = pb.OssListReq
	OssListResp   = pb.OssListResp
	PingResp      = pb.PingResp

	Resource interface {
		Ping(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*PingResp, error)
		OssDetail(ctx context.Context, in *OssDetailReq, opts ...grpc.CallOption) (*OssDetailResp, error)
		OssList(ctx context.Context, in *OssListReq, opts ...grpc.CallOption) (*OssListResp, error)
	}

	defaultResource struct {
		cli zrpc.Client
	}
)

func NewResource(cli zrpc.Client) Resource {
	return &defaultResource{
		cli: cli,
	}
}

func (m *defaultResource) Ping(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*PingResp, error) {
	client := pb.NewResourceClient(m.cli.Conn())
	return client.Ping(ctx, in, opts...)
}

func (m *defaultResource) OssDetail(ctx context.Context, in *OssDetailReq, opts ...grpc.CallOption) (*OssDetailResp, error) {
	client := pb.NewResourceClient(m.cli.Conn())
	return client.OssDetail(ctx, in, opts...)
}

func (m *defaultResource) OssList(ctx context.Context, in *OssListReq, opts ...grpc.CallOption) (*OssListResp, error) {
	client := pb.NewResourceClient(m.cli.Conn())
	return client.OssList(ctx, in, opts...)
}
