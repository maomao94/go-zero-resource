// Code generated by goctl. DO NOT EDIT.
// Source: push.proto

package gtw

import (
	"context"

	"github.com/hehanpeng/go-zero-resource/push/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Empty               = pb.Empty
	PingResp            = pb.PingResp
	PushOneMsgToUserReq = pb.PushOneMsgToUserReq
	PushOneMsgToUserRes = pb.PushOneMsgToUserRes

	Gtw interface {
		Ping(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*PingResp, error)
		PushOneMsgToUser(ctx context.Context, in *PushOneMsgToUserReq, opts ...grpc.CallOption) (*PushOneMsgToUserRes, error)
	}

	defaultGtw struct {
		cli zrpc.Client
	}
)

func NewGtw(cli zrpc.Client) Gtw {
	return &defaultGtw{
		cli: cli,
	}
}

func (m *defaultGtw) Ping(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*PingResp, error) {
	client := pb.NewGtwClient(m.cli.Conn())
	return client.Ping(ctx, in, opts...)
}

func (m *defaultGtw) PushOneMsgToUser(ctx context.Context, in *PushOneMsgToUserReq, opts ...grpc.CallOption) (*PushOneMsgToUserRes, error) {
	client := pb.NewGtwClient(m.cli.Conn())
	return client.PushOneMsgToUser(ctx, in, opts...)
}
